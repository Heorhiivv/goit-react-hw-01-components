{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","css","profile","description","src","alt","stats_item","label","quantity","followers","views","likes","defaultProps","Statistics","title","background","random1","Math","round","random","random2","random3","randomColor","statistics","stat_list","map","item","style","backgroundColor","percentage","id","FriendListItem","isOnline","status","online","offline","width","FriendList","friends","friend_list","props","protoTypes","PropTypes","arrayOf","object","isRequired","TransactionHistory","items","transaction_history","thead","tbody","el","row","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96aba516.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__AO6ha\",\"description\":\"Profile_description__38Xco\",\"stats\":\"Profile_stats__3fVZV\",\"avatar\":\"Profile_avatar__3fyRW\",\"name\":\"Profile_name__28DsJ\",\"tag\":\"Profile_tag__2kAPT\",\"location\":\"Profile_location__1smlV\",\"stats_item\":\"Profile_stats_item__2XD14\",\"quantity\":\"Profile_quantity__2ynbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__23aop\",\"friend_list\":\"FriendList_friend_list__1rtVf\",\"online\":\"FriendList_online__2a3N6\",\"offline\":\"FriendList_offline__aD9Ar\",\"avatar\":\"FriendList_avatar__2ygkt\",\"name\":\"FriendList_name__3oPZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__-aqfI\",\"stat_list\":\"Statistics_stat_list__2ycxE\",\"title\":\"Statistics_title__3moYA\",\"item\":\"Statistics_item__3Mij5\",\"percentage\":\"Statistics_percentage__R_rEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__33d9Z\",\"thead\":\"TransactionHistory_thead__lzCwb\",\"tbody\":\"TransactionHistory_tbody__cdZ6R\",\"row\":\"TransactionHistory_row__3GDrm\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from '../Profile/Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={css.profile}>\r\n    <div className={css.description}>\r\n      <img src={avatar} alt=\"Аватар пользователя\" className={css.avatar} />\r\n      <p className={css.name}>{name}</p>\r\n      <p className={css.tag}>@{tag}</p>\r\n      <p className={css.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={css.stats}>\r\n      <li className ={css.stats_item}>\r\n        <span className={css.label}>Followers</span>\r\n        <span className={css.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li className ={css.stats_item}>\r\n        <span className={css.label}>Views</span>\r\n        <span className={css.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li className ={css.stats_item}>\r\n        <span className={css.label}>Likes</span>\r\n        <span className={css.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  avatar: 'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder'\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from '../Statistics/Statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  const randomColor = () => {\r\n    let random1 = Math.round(Math.random() * 255);\r\n    let random2 = Math.round(Math.random() * 255);\r\n    let random3 = Math.round(Math.random() * 255);\r\n    return `rgb(${random1}, ${random2}, ${random3})`;\r\n  };\r\n  let background = randomColor();\r\n  return (\r\n    <section className={css.statistics}>\r\n      <h2 className={css.title}>{title}</h2>\r\n\r\n      <ul className={css.stat_list}>\r\n        {stats.map(item => (\r\n          <li\r\n            className={css.item}\r\n            key={item.id}\r\n            style={{ backgroundColor: background }}\r\n          >\r\n            <span className={css.label}>{item.label}</span>\r\n            <span className={css.percentage}>{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\nStatistics.defaultProps = {\r\n  title: '',\r\n  stats: [],\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from '../FriendList.module.css'\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  const status = [isOnline ? css.online : css.offline]\r\n  return (\r\n    <li className={css.item}>\r\n      <span className={status}>{isOnline}</span>\r\n      <img className={css.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n      <p className={css.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n  isOnline: false,\r\n  avatar: 'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n  name: ''\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendList/FriendListItem/FriendListItem';\r\nimport css from '../FriendList/FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={css.friend_list}>\r\n      {friends.map(props => (\r\n        <FriendListItem key={props.id} {...props} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.defaultProps = {\r\n  friends: [],\r\n};\r\n\r\nFriendList.protoTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from '../TransactionHistory/TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={css.transaction_history}>\r\n      <thead className={css.thead}>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody className={css.tbody}>\r\n        {items.map(el => (\r\n          <tr className={css.row} key={el.id}>\r\n            <td>{el.type}</td>\r\n            <td>{el.amount}</td>\r\n            <td>{el.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.defaultProps = {\r\n  items: 'There is no any transactions',\r\n};\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\nimport '../App/App.module.css';\n\nimport user from '../../data/user.json';\nimport Profile from '../Profile/Profile';\n\nimport statisticalData from '../../data/statistical-data.json';\nimport Statistics from '../Statistics/Statistics';\n\nimport friends from '../../data/friends.json';\nimport FriendList from '../FriendList/FriendList';\n\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport transactions from '../../data/transactions.json';\n\nconst App = () => (\n  <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}